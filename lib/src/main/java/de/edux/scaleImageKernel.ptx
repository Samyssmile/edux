//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-31833905
// Cuda compilation tools, release 11.8, V11.8.89
// Based on NVVM 7.0.1
//

.version 7.8
.target sm_52
.address_size 64

	// .globl	scaleImageKernel

.visible .entry scaleImageKernel(
	.param .u64 scaleImageKernel_param_0,
	.param .u64 scaleImageKernel_param_1,
	.param .u32 scaleImageKernel_param_2,
	.param .u32 scaleImageKernel_param_3,
	.param .u32 scaleImageKernel_param_4,
	.param .u32 scaleImageKernel_param_5
)
{
	.reg .pred 	%p<4>;
	.reg .b16 	%rs<4>;
	.reg .f32 	%f<11>;
	.reg .b32 	%r<23>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd1, [scaleImageKernel_param_0];
	ld.param.u64 	%rd2, [scaleImageKernel_param_1];
	ld.param.u32 	%r3, [scaleImageKernel_param_2];
	ld.param.u32 	%r4, [scaleImageKernel_param_3];
	ld.param.u32 	%r5, [scaleImageKernel_param_4];
	ld.param.u32 	%r6, [scaleImageKernel_param_5];
	mov.u32 	%r7, %ntid.x;
	mov.u32 	%r8, %ctaid.x;
	mov.u32 	%r9, %tid.x;
	mad.lo.s32 	%r1, %r8, %r7, %r9;
	mov.u32 	%r10, %ntid.y;
	mov.u32 	%r11, %ctaid.y;
	mov.u32 	%r12, %tid.y;
	mad.lo.s32 	%r2, %r11, %r10, %r12;
	setp.ge.s32 	%p1, %r1, %r5;
	setp.ge.s32 	%p2, %r2, %r6;
	or.pred  	%p3, %p1, %p2;
	@%p3 bra 	$L__BB0_2;

	cvt.rn.f32.s32 	%f1, %r1;
	cvt.rn.f32.s32 	%f2, %r5;
	cvt.rn.f32.s32 	%f3, %r3;
	div.rn.f32 	%f4, %f3, %f2;
	mul.f32 	%f5, %f4, %f1;
	cvt.rzi.s32.f32 	%r13, %f5;
	cvt.rn.f32.s32 	%f6, %r6;
	cvt.rn.f32.s32 	%f7, %r4;
	div.rn.f32 	%f8, %f7, %f6;
	cvt.rn.f32.s32 	%f9, %r2;
	mul.f32 	%f10, %f8, %f9;
	cvt.rzi.s32.f32 	%r14, %f10;
	add.s32 	%r15, %r3, -1;
	min.s32 	%r16, %r13, %r15;
	add.s32 	%r17, %r4, -1;
	min.s32 	%r18, %r14, %r17;
	mad.lo.s32 	%r19, %r18, %r3, %r16;
	mul.lo.s32 	%r20, %r19, 3;
	mad.lo.s32 	%r21, %r2, %r5, %r1;
	mul.lo.s32 	%r22, %r21, 3;
	cvt.s64.s32 	%rd3, %r20;
	cvta.to.global.u64 	%rd4, %rd1;
	add.s64 	%rd5, %rd4, %rd3;
	ld.global.u8 	%rs1, [%rd5];
	cvt.s64.s32 	%rd6, %r22;
	cvta.to.global.u64 	%rd7, %rd2;
	add.s64 	%rd8, %rd7, %rd6;
	st.global.u8 	[%rd8], %rs1;
	ld.global.u8 	%rs2, [%rd5+1];
	st.global.u8 	[%rd8+1], %rs2;
	ld.global.u8 	%rs3, [%rd5+2];
	st.global.u8 	[%rd8+2], %rs3;

$L__BB0_2:
	ret;

}

